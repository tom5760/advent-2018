// Code generated by "stringer -type=opcode -trimprefix=op"; DO NOT EDIT.

package intcode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[opAdd-1]
	_ = x[opMul-2]
	_ = x[opInput-3]
	_ = x[opOutput-4]
	_ = x[opJmpT-5]
	_ = x[opJmpF-6]
	_ = x[opLT-7]
	_ = x[opEQ-8]
	_ = x[opRelBase-9]
	_ = x[opHalt-99]
}

const (
	_opcode_name_0 = "AddMulInputOutputJmpTJmpFLTEQRelBase"
	_opcode_name_1 = "Halt"
)

var (
	_opcode_index_0 = [...]uint8{0, 3, 6, 11, 17, 21, 25, 27, 29, 36}
)

func (i opcode) String() string {
	switch {
	case 1 <= i && i <= 9:
		i -= 1
		return _opcode_name_0[_opcode_index_0[i]:_opcode_index_0[i+1]]
	case i == 99:
		return _opcode_name_1
	default:
		return "opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
